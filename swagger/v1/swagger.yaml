---
openapi: 3.0.1
info:
  title: Questions API
  version: v1
  description: API for questions and answers for the Fractal Company
components:
  securitySchemes:
    Bearer:
      type: apiKey
      scheme: bearer
      bearerFormat: JWT
      name: Authorization
      in: header
security:
- Bearer: []
paths:
  "/exams":
    get:
      summary: Retrieves exams
      tags:
      - Exams
      security:
      - Bearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: exams found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            theme:
                              type: string
                            subject:
                              type: string
                            created:
                              type: string
                            finished:
                              type: string
                          required:
                          - theme
                          - subject
                          - created
                          - finished
                      required:
                      - id
                      - type
                      - attributes
                required:
                - data
        '401':
          description: unauthorized
    post:
      summary: Create a exam
      tags:
      - Exams
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: exam created
          content:
            applications/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          theme:
                            type: string
                          subject:
                            type: string
                          created:
                            type: string
                          finished:
                            type: 'null'
                        required:
                        - theme
                        - subject
                        - created
                        - finished
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                exam:
                  type: object
                  properties:
                    theme:
                      type: string
                    subject_id:
                      type: string
                  required:
                  - theme
                  - subject_id
              required:
              - exam
  "/exams/{id}":
    get:
      summary: Show an exam
      tags:
      - Exams
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: exam found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          theme:
                            type: string
                          subject:
                            type: string
                          created:
                            type: string
                          finished:
                            type: 'null'
                          questions:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                ask:
                                  type: string
                                answers:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      response:
                                        type: string
                                      corrected:
                                        type: boolean
                                    required:
                                    - id
                                    - response
                                    - corrected
                              required:
                              - id
                              - ask
                              - answer
                        required:
                        - theme
                        - subject
                        - created
                        - finished
        '401':
          description: unauthorized
    put:
      summary: Update a exam
      tags:
      - Exams
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: exam updated
          content:
            applications/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          theme:
                            type: string
                          subject:
                            type: string
                          created:
                            type: string
                          finished:
                            type: date
                        required:
                        - theme
                        - subject
                        - created
                        - finished
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                exam:
                  type: object
                  properties:
                    theme:
                      type: string
                    subject_id:
                      type: string
                    finished:
                      type: date
                  required:
                  - theme
                  - subject_id
                  - finished
              required:
              - exam
    delete:
      summary: Delete a exam
      tags:
      - Exams
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: exam deleted
        '401':
          description: unauthorized
  "/questions":
    get:
      summary: List all questions
      tags:
      - Questions
      security:
      - Bearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
      - name: q
        in: query
        items:
          type: string
        collectionFormat: multi
        required: false
        schema:
          type: array
      responses:
        '200':
          description: questions found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            ask:
                              type: string
                            exam_id:
                              type: integer
                          required:
                          - ask
                          - exam-id
                      required:
                      - id
                      - type
                      - attributes
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: url
                        example: http://localhost:3000/questions?page=1&per_page=10
                      first:
                        type: string
                        format: url
                        example: http://localhost:3000/questions?page=1&per_page=10
                      prev:
                        type: 'null'
                      next:
                        type: 'null'
                      last:
                        type: string
                        format: url
                        example: http://localhost:3000/questions?page=1&per_page=10
                    required:
                    - self
                    - first
                    - prev
                    - next
                    - last
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      total_items:
                        type: integer
                        example: 5
                      items_per_page:
                        type: integer
                        example: 10
                    required:
                    - current-page
                    - total-items
                    - items-per-page
                required:
                - data
        '401':
          description: unauthorized
  "/exams/{exam_id}/questions/{id}":
    get:
      summary: Show a question
      tags:
      - Questions
      security:
      - Bearer: []
      parameters:
      - name: exam_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: question found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          ask:
                            type: string
                          exam_id:
                            type: integer
                          answers:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                response:
                                  type: string
                                corrected:
                                  type: boolean
                              required:
                              - id
                              - response
                              - corrected
                        required:
                        - ask
                        - exam-id
                        - answers
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '401':
          description: unauthorized
  "/exams/{exam_id}/questions":
    post:
      summary: Create a question
      tags:
      - Questions
      security:
      - Bearer: []
      parameters:
      - name: exam_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: question created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          ask:
                            type: string
                          exam_id:
                            type: integer
                        required:
                        - ask
                        - exam-id
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '401':
          description: unauthorized
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: object
                  properties:
                    ask:
                      type: string
                  required:
                  - ask
              required:
              - question
  "/questions/{id}":
    put:
      summary: Update a question
      tags:
      - Questions
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: question updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          ask:
                            type: string
                          exam_id:
                            type: integer
                        required:
                        - ask
                        - exam-id
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: object
                  properties:
                    ask:
                      type: string
                  required:
                  - ask
              required:
              - question
    delete:
      summary: Delete a question
      tags:
      - Questions
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: question deleted
        '401':
          description: unauthorized
  "/registrations":
    post:
      summary: Creates a registration
      tags:
      - Registrations
      parameters: []
      responses:
        '201':
          description: registration created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    username:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                  required:
                  - name
                  - email
                  - username
                  - password
                  - password_confirmation
              required:
              - user
  "/sessions":
    post:
      summary: Creates a session
      tags:
      - Sessions
      security:
      - Bearer: []
      parameters: []
      responses:
        '401':
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/subjects":
    get:
      summary: Retrieves all school subjects
      tags:
      - Subjects
      security:
      - Bearer: []
      responses:
        '200':
          description: subjects found
          content:
            application/vnd.questions-api.v1:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type:
                          type: string
                          example: subjects
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Math
                          required:
                          - name
                      required:
                      - id
                      - type
                      - attributes
                required:
                - data
        '401':
          description: unauthorized
    post:
      summary: Creates a subject
      tags:
      - Subjects
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: subject created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Biologia
                  required:
                  - name
              required:
              - subject
  "/subjects/{id}":
    put:
      summary: Updates a subject
      tags:
      - Subjects
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: subject updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Biologia
        '401':
          description: unauthorized
        '422':
          description: subject not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - subject
    delete:
      summary: Deletes a subject
      tags:
      - Subjects
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: subject deleted
        '401':
          description: unauthorized
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.question-api.com
